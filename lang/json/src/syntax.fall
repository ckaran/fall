tokenizer {
  #[skip] whitespace r"\s+"

  lbrace     '{'
  rbrace     '}'
  lbrack     '['
  rbrack     ']'
  colon      ':'
  comma      ','
  null       'null'

  bool       r"true|false"
  string     r#""[^"]*""#
  number     r"\d+"
}

pub rule file {
  object | array
}

pub rule object {
  '{' <commit>
    <layer block_body object_body>
  '}'
}

rule object_body {
  <rep <with_skip
    string
    {field <commit> {',' <not <eof>> | <eof>}}>>
}

pub rule field {
  string <commit> ':' value
}

pub rule array {
  '[' <commit>
     <layer br_block_body array_body>
  ']'
}

rule array_body {
  <rep <with_skip
    { 'null' | number | string | bool | '{' | '[' }
    {value <commit> {',' <not <eof>> | <eof>}}>>
}

rule value { primitive | object | array }

pub rule primitive { 'null' | number | string | bool }

rule block_body { <rep balanced> }
rule balanced {
  '{' <commit> block_body '}'
| {<not '}'> <any>}
}

rule br_block_body { <rep br_balanced> }
rule br_balanced {
  '[' <commit> br_block_body ']'
| {<not ']'> <any>}
}
